
// driver for TMP275 and TMP102
int gettmp275_102values(aJsonObject* params)
{
  aJsonObject* addressParam = aJson.getObjectItem(params, "address");
  int requestedAddress = addressParam -> valueint;

  Wire.beginTransmission(requestedAddress);   // Open I2C line in write mode
  Wire.write((byte)0x01);                              // Set the register pointer to (0x01)
  Wire.write((byte)0xE1);                              // Set resolution and SHUTDOWN MODE and one shot
  Wire.endTransmission();                       // End Write Transmission 

  delay(500);

  Wire.beginTransmission(requestedAddress);   // Open I2C line in write mode
  Wire.write((byte)0x00);                              // Set the register pointer to (0x00)
  Wire.endTransmission();                       // End Write Transmission 
  Wire.requestFrom(requestedAddress,2);

  if (Wire.available() < 2)    // slave may send less than requested
  { 
    return E_INTERNAL_ERROR;
  }
  byte MSB = Wire.read();
  byte LSB = Wire.read();

  if (MSB == 255 & LSB ==255)
  { 
    return E_INTERNAL_ERROR;
  }

  //it's a 12bit int, using two's compliment for negative
  //int TemperatureSum = ((MSB << 8) | LSB) >> 4 & 0xFFF; 
  int TemperatureSum = ((MSB << 8) | LSB) >> 4 ; 

  if (TemperatureSum & 0x800)
  {
    TemperatureSum=TemperatureSum - 0x1000;
  }

  int kelvin = (int)(TemperatureSum*6.25 + 27315.) ;

  //  aJson.addNumberToObject(result, "msb", (int) (MSB) );
  //  aJson.addNumberToObject(result, "lsb", (int) (LSB) );
  aJson.addNumberToObject(result, "lsb", (int) (LSB) );
  aJson.addNumberToObject(result, "B12101", kelvin );
  //  aJson.addStringToObject(result, "description", "Temperature K");

  return E_SUCCESS;

}
